<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{{ app_name }}</title>
  <link rel="stylesheet" type="text/css" href="/static/styles.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>

<style>
  .inputBox {
    display: flex;
    justify-content: center;
    height: 50vh;
  }

  #dropArea {
    display: flex;
    padding: 1.5rem;
    margin: 0.8rem 0;
    text-align: center;
    align-items: center;
    flex-direction: column;
    font-size: 2rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 100%;
  }

  svg {
    height: auto;
    width: 60rem;
    margin-top: 7rem;
  }

  #dropArea.drag {
    background-color: var(--secondary-background-color);
    color: var(--background-color);
  }

  #dropArea input[type="file"] {
    display: none;
  }
</style>

<body>
  <div class="top-bar">
    <h1><a href="/">Plastic</a></h1>
    <div class="right-buttons">
      <button class="calculateBtn">Calculate your STL</button>
      <button class="shopBtn">Shop</button>
      <button class="customDesignBtn">Custom design</button>
      <button style="border: 1px solid var(--text-color)">Materials and colors</button>
    </div>
  </div>

  <div class="main-content">
    <p style="font-size: 2.4rem">If you have a custom stl ready, you can calculate the approximate price by uploading it into or clicking the puddle.</p>
    <div class="inputBox">
      <div id="dropArea">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 60">
          <path fill="var(--background-color)" stroke="var(--text-color)" stroke-width="0.25" d="m 91.238778,35.721521 c 0,1.485537 1.246133,2.687307 2.784122,2.687307 1.53799,0 2.784124,-1.20177 2.784124,-2.687307 0,-1.484325 -1.246134,-2.686095 -2.784124,-2.686095 -1.537989,0 -2.784122,1.20177 -2.784122,2.686095 z m 1.364187,0.987124 c 1.810172,0.804009 3.435609,-0.864644 3.435609,-0.864644 -1.495359,2.564827 -3.435609,0.864644 -3.435609,0.864644 z M 13.879084,56.278942 c 0,1.165387 1.203501,2.107641 2.686835,2.107641 1.484429,0 2.686838,-0.942254 2.686838,-2.107641 0,-1.162966 -1.202409,-2.10522 -2.686838,-2.10522 -1.483334,0 -2.686835,0.942254 -2.686835,2.10522 z m 1.460379,0.470521 c 1.682279,0.221923 3.185291,-0.470521 3.185291,-0.470521 -1.659324,2.008202 -3.185291,0.470521 -3.185291,0.470521 z m 7.355462,-17.661532 c 0,1.366695 1.482241,2.469024 3.312089,2.469024 1.829849,0 3.313183,-1.102329 3.313183,-2.469024 0,-1.366695 -1.482243,-2.470236 -3.313183,-2.470236 -1.829848,0 -3.312089,1.103541 -3.312089,2.470236 z m 1.741307,0.371081 c 1.741305,0.371082 3.952645,-0.371081 3.952645,-0.371081 -2.003651,1.851769 -3.952645,0.371081 -3.952645,0.371081 z M 17.42291,36.052583 c 0,0.916789 0.817637,1.65774 1.829847,1.65774 1.012209,0 1.829848,-0.740951 1.829848,-1.65774 0,-0.915577 -0.817639,-1.656526 -1.829848,-1.656526 -1.01221,0 -1.829847,0.740949 -1.829847,1.656526 z m 1.058119,0.132182 c 1.004558,0.515392 1.641834,0 1.641834,0 -0.779379,1.266042 -1.641834,0 -1.641834,0 z M 0.64165703,18.434711 c 0,1.035632 1.14119507,1.87481 2.55347877,1.87481 1.4122836,0 2.5534791,-0.837964 2.5534791,-1.87481 0,-1.036844 -1.1411955,-1.873596 -2.5534791,-1.873596 -1.4122837,0 -2.55347877,0.836752 -2.55347877,1.873596 z M 1.9194896,18.95374 C 2.5589523,19.201128 4.8686699,18.707566 4.8686699,18.707566 3.4498278,20.035455 1.9194896,18.95374 1.9194896,18.95374 Z M 99.326615,67.697567 M 57.399719,54.961963 c 0,0.730037 0.694117,1.318189 1.5522,1.318189 0.856989,0 1.5522,-0.588152 1.5522,-1.318189 0,-0.731247 -0.695211,-1.319399 -1.5522,-1.319399 -0.859175,0 -1.5522,0.589362 -1.5522,1.319399 z m 0.605576,0.430508 c 1.22427,0.494766 1.947902,-0.41838 1.947902,-0.41838 v 0.282559 c -0.834034,1.47098 -1.947902,0.135821 -1.947902,0.135821 z M 3.5055758,14.140598 c 5.0468367,1.235725 3.7854005,3.868462 3.7854005,3.868462 -1.4866134,2.140387 -0.9641125,5.271536 -0.9641125,5.271536 1.1127743,5.351575 9.7209282,3.211187 9.7209282,3.211187 6.235035,-0.577237 8.536008,2.965012 8.536008,2.965012 1.634182,3.292437 4.601946,5.517712 4.601946,5.517712 3.486985,3.127512 3.02679,6.174987 3.02679,6.174987 0.132265,1.976675 -4.213896,1.729286 -4.213896,1.729286 -8.164354,-0.987123 -9.352553,-0.493561 -9.352553,-0.493561 -1.631997,0.247387 -3.7854,-0.08004 -3.7854,-0.08004 -10.4653288,-2.386562 -7.0144149,3.206336 -7.0144149,3.206336 0.2962287,3.296072 4.1548679,3.705958 4.1548679,3.705958 6.160705,0.164928 10.947384,3.297293 10.947384,3.297293 13.805837,4.363232 22.34294,1.563146 22.34294,1.563146 5.49282,-2.30652 13.658268,-3.128723 13.658268,-3.128723 1.681186,-0.208585 4.174544,-0.06302 4.174544,-0.06302 9.241059,0.925284 14.084579,-2.470239 14.084579,-2.470239 5.790144,-3.521631 12.525819,-2.162212 12.525819,-2.162212 7.681205,1.050184 6.182567,-4.281987 6.182567,-4.281987 -3.192941,-5.683849 -9.948292,-2.387774 -9.948292,-2.387774 -5.121169,1.565575 -4.898176,-3.70475 -4.898176,-3.70475 -0.07433,-4.609411 3.935155,-3.377325 3.935155,-3.377325 2.152313,1.235725 4.080539,0.987125 4.080539,0.987125 7.794886,-1.399437 5.12226,-6.502411 5.12226,-6.502411 -2.894526,-5.352829 -10.093675,-1.976716 -10.093675,-1.976716 -6.755349,2.965012 -11.281871,0.411099 -11.281871,0.411099 -3.713257,-3.293649 -6.160706,-2.965011 -6.160706,-2.965011 -6.755349,-0.576025 -6.977249,-2.221637 -6.977249,-2.221637 -1.883409,-2.089454 0.642742,-4.037025 2.64202,-5.146631 2.605947,-0.773692 3.444354,-1.924529 3.666254,-2.825553 0,0 0.0022,-0.0072 0.0022,-0.0097 0.02405,-0.101861 0.04373,-0.201306 0.05356,-0.294682 0.0055,-0.03153 0.0098,-0.06185 0.01311,-0.0958 0,-0.0097 0.0011,-0.02062 0.0032,-0.03032 0.0798,-0.668188 0.094,-1.9572717 -0.829662,-2.7273257 v 0.00486 C 64.6764,8.3294244 63.962608,8.0371664 63.962608,8.0371664 59.805553,5.4007923 49.152211,6.7286812 49.152211,6.7286812 43.731535,9.1164555 27.63019,2.4454813 27.63019,2.4454813 21.913282,0.3863447 16.868632,0.6349445 16.868632,0.6349445 7.73907,1.128507 2.693327,6.233906 2.693327,6.233906 c -4.3046232,6.753437 0.8121723,7.906699 0.8121723,7.906699 z m 58.3758472,0.654849 c 0,0 3.119704,-1.397012 3.304438,-4.033386 0.0011,0 0.482056,3.126299 -3.304438,4.033386 z M 79.68691,33.219754 c 1.113868,-4.013984 4.620528,-2.871636 4.620528,-2.871636 2.283484,1.266043 4.065234,1.175091 4.065234,1.175091 2.950274,-0.06306 4.509033,-1.884511 4.509033,-1.884511 -2.867197,4.63124 -8.628922,1.420053 -8.628922,1.420053 -3.506661,-0.677891 -4.565873,2.161003 -4.565873,2.161003 z M 61.595031,49.184735 c 11.383531,0.555413 16.478465,-3.67443 16.478465,-3.67443 3.506661,-2.315013 8.0146,-1.759605 8.0146,-1.759605 5.973784,0.403824 7.70416,-1.099904 7.90857,-1.303635 -1.863733,2.481152 -11.368227,2.117346 -11.368227,2.117346 -2.077981,0 -5.975972,2.430219 -5.975972,2.430219 -8.459492,3.30093 -15.057436,2.190105 -15.057436,2.190105 z M 16.921177,48.597794 c -7.1816597,-0.554192 -6.736768,-3.525268 -6.736768,-3.525268 2.617972,1.852981 6.736768,3.525268 6.736768,3.525268 z m 27.037799,3.294862 C 50.900153,49.216264 56.0563,49.506097 56.0563,49.506097 c -4.064141,-0.02059 -11.856842,3.414914 -11.856842,3.414914 -10.40958,2.347766 -19.094251,-1.173872 -19.094251,-1.173872 -2.116238,-1.543744 -5.455655,-2.382927 -5.455655,-2.382927 2.116239,-0.160075 5.455655,1.025935 5.455655,1.025935 1.058121,0.801579 2.170895,1.047757 2.170895,1.047757 10.85447,2.225272 16.682874,0.454752 16.682874,0.454752 z M 30.670174,34.096524 c 0.665697,0.657275 1.191478,1.338803 1.692117,2.161003 0.200037,0.332275 0.426308,0.666976 0.596832,1.00774 0.158499,0.314085 0.271088,0.639085 0.432867,0.937405 0.21534,0.391697 0.495174,0.719121 0.612135,1.171453 0.09947,0.384421 -0.0317,0.848878 0.0339,1.227235 l -0.08307,-0.03032 c -0.07871,0.03274 -0.196758,0.03274 -0.300602,0.02426 -0.329023,-0.823413 -0.445985,-1.723225 -0.81108,-2.562402 -0.15522,-0.352892 -0.256878,-0.778543 -0.453635,-1.10718 -0.169432,-0.288619 -0.360724,-0.548134 -0.518131,-0.851305 -0.205501,-0.389271 -0.404445,-0.820986 -0.638368,-1.183579 -0.173803,-0.270428 -0.418658,-0.508114 -0.562947,-0.794308 z m -4.337415,-4.740381 c 0.05903,-0.08368 0.104932,-0.192817 0.111495,-0.300746 0.605576,0.24375 1.132451,1.001676 1.527059,1.56315 0.191292,0.271641 0.420843,0.479009 0.631811,0.725185 0.160685,0.186753 0.32793,0.510539 0.537805,0.611192 h -0.02842 c -0.04481,0.06427 -0.08636,0.149161 -0.115869,0.24375 -0.158504,-0.200092 -0.320283,-0.420801 -0.51704,-0.574813 -0.308254,-0.247387 -0.429588,-0.449905 -0.682093,-0.782181 -0.219714,-0.286193 -0.448171,-0.500839 -0.654768,-0.800371 -0.23283,-0.335913 -0.445983,-0.552983 -0.809985,-0.685166 z M 8.2933485,23.154478 c 1.0854474,1.11203 2.7557025,1.018654 8.9065695,1.235724 6.150866,0.215859 8.544753,4.045514 8.544753,4.045514 -4.28604,-3.798127 -11.050137,-3.582268 -11.050137,-3.582268 -5.5103104,0.184328 -6.4011855,-1.69897 -6.4011855,-1.69897 z m -1.6145069,-8.80166 c 3.0333487,1.66744 2.505382,3.488891 2.505382,3.488891 -0.8908751,-2.19132 -2.505382,-3.488891 -2.505382,-3.488891 z M 2.4201287,8.825404 C 1.8866966,11.66066 6.1782019,13.981737 6.1782019,13.981737 0.24814137,11.944427 2.4201287,8.825404 2.4201287,8.825404 Z" />
        </svg>
        CLICK ME.
        <input type="file" id="fileInput" accept=".stl">
      </div>
    </div>

  </div>

  <div class="footer">
    <p style="text-align: center">Built by <a href="https://vincentsmid.xyz" target="_blank">vincent</a>.
    </p>
  </div>

  <script>
    const dropArea = document.getElementById('dropArea');
    const fileInput = document.getElementById('fileInput');

    dropArea.addEventListener('click', () => fileInput.click());

    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
      dropArea.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
      e.preventDefault();
      e.stopPropagation();
    }

    ['dragenter', 'dragover'].forEach(eventName => {
      dropArea.addEventListener(eventName, highlight, false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
      dropArea.addEventListener(eventName, unhighlight, false);
    });

    function highlight() {
      dropArea.classList.add('dragover');
    }

    function unhighlight() {
      dropArea.classList.remove('dragover');
    }

    fileInput.addEventListener('change', handleFile, false);

    function handleFile(e) {
      let file = e.target.files[0];

      uploadFile(file);
    }

    function uploadFile(file) {
      const formData = new FormData();
      formData.append('to_calculate', file);

      fetch('/api/v1/calculateprice', {
        method: 'POST',
        body: formData
      })
        .then(response => response.json())
        .then(data => {
          console.log(data);
        })
        .catch(error => {
          console.error(error);
        });
    }

    $(function() {
      const sparkleSettings = {
        color: "#FFFFFF",
        count: 30,
        overlap: 0,
        speed: 1
      };

      $('#dropArea').hover(function() {
        $(this).sparkleh(sparkleSettings);
      }, function() {
        $(this).find('.sparkle-canvas').remove();
      });
    });

    $.fn.sparkleh = function(options) {
      const settings = $.extend({
        width: $(this).outerWidth(),
        height: $(this).outerHeight(),
        color: "#FFFFFF",
        count: 30,
        overlap: 0,
        speed: 1,
      }, options);

      return this.each(function() {
        const $this = $(this).css("position", "relative");
        const sparkle = new Sparkle($this, settings);
      });
    };

    function Sparkle($parent, options) {
      this.options = options;
      this.init($parent);
    }

    Sparkle.prototype = {
      init: function($parent) {
        const canvas = $('<canvas>').addClass('sparkle-canvas').css({
          position: "absolute",
          top: 0,
          left: 0,
          "pointer-events": "none",
          width: '100%',
          height: '100%'
        }).appendTo($parent);

        const context = canvas[0].getContext('2d');

        canvas[0].width = $parent.width();
        canvas[0].height = $parent.height();

        const draw = () => {
          context.clearRect(0, 0, canvas.width(), canvas.height());
          for (let i = 0; i < this.options.count; i++) {
            context.beginPath();
            context.arc(Math.random() * canvas.width(), Math.random() * canvas.height(), Math.random() * 3, 0, 2 * Math.PI, false);
            context.fillStyle = this.options.color;
            context.fill();
          }
        };

        setInterval(draw, 80);
      }
    };
</script>

</body>

</html>